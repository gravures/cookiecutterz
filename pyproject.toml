[build-system]
requires      = ["setuptools>=61", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "cookiecutterz"
description = "A cookiecutter extension providing template inheritance"
authors = [{ name = "Gilles Coissac", email = "gilles@ideographe.fr" }]
readme = "README.md"
license = { text = "GPL-3.0" }
requires-python = ">=3.8"
dependencies = ["cookiecutter>=2.3.0", "cruft>=2.15.0", "pdm>=2.12.3"]
keywords = ['cookiecutter', 'template', 'template-engine']
classifiers = [
  "Intended Audience :: Developers",
  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3 :: Only",
]
dynamic = ["version"]

[project.urls]
homepage = "https://github.com/gravures/cookiecutterz"
source   = "https://github.com/gravures/cookiecutterz"

[project.scripts]
cookiecutter = "cookiecutterz.main:main"
cruft        = "cookiecutterz.cruft:main"

[tool.setuptools]
platforms = ["Windows", "macOS", "Linux"]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
write_to       = "src/cookiecutterz/_version.py"
root           = "."
version_scheme = "guess-next-dev"
local_scheme   = "no-local-version"

[tool.pdm]
distribution = true
plugins      = ["-e file:///${PROJECT_ROOT}"]

[project.entry-points.pdm]
pdm-cruft = "cookiecutterz.pdm:main"

[tool.pdm.dev-dependencies]
test = ["pytest", "hypothesis", "coverage", "covdefaults"]
lint = ["ruff"]
dev  = ["setuptools>=69.0.3"]

[tool.pdm.scripts]
version    = "setup.py --version"
test_cruft = { shell = "clear && pytest -s tests/create_project_test.py::test_cruft_create" }
test_pdm   = { shell = "clear && pytest -s tests/create_project_test.py::test_pdm_create" }
test_cc    = { shell = "clear && pytest -s tests/create_project_test.py::test_cookiecutter_create" }
test       = "coverage run -m pytest"
report     = "coverage report"

[tool.coverage.run]
plugins = ["covdefaults"]
source  = ["src"]
