"""
This type stub file was generated by pyright.
"""

import abc
from typing import Iterable, NewType, TYPE_CHECKING, TypeVar
from pdm.compat import Distribution
from pdm.environments import BaseEnvironment

if TYPE_CHECKING:
    ...
_T = TypeVar("_T", bound="BaseRemovePaths")
NormalizedPath = NewType("NormalizedPath", str)
def renames(old: str, new: str) -> None:
    """Like os.renames(), but handles renaming across devices."""
    ...

def compress_for_rename(paths: Iterable[NormalizedPath]) -> set[NormalizedPath]:
    """Returns a set containing the paths that need to be renamed.

    This set may include directories when the original sequence of paths
    included every file on disk.
    """
    ...

class BaseRemovePaths(abc.ABC):
    """A collection of paths and/or pth entries to remove"""
    def __init__(self, dist: Distribution, environment: BaseEnvironment) -> None:
        ...

    def difference_update(self, other: BaseRemovePaths) -> None:
        ...

    @abc.abstractmethod
    def remove(self) -> None:
        """Remove the files"""
        ...

    @abc.abstractmethod
    def commit(self) -> None:
        """Commit the removal"""
        ...

    @abc.abstractmethod
    def rollback(self) -> None:
        """Roll back the removal operations"""
        ...

    @classmethod
    def from_dist(cls: type[_T], dist: Distribution, environment: BaseEnvironment) -> _T:
        """Create an instance from the distribution"""
        ...

    def add_pth(self, line: str) -> None:
        ...

    def add_path(self, path: str) -> None:
        ...



class StashedRemovePaths(BaseRemovePaths):
    """Stash the paths to temporarily location and remove them after commit"""
    PTH_REGISTRY = ...
    def __init__(self, dist: Distribution, environment: BaseEnvironment) -> None:
        ...

    def remove(self) -> None:
        ...

    def commit(self) -> None:
        ...

    def rollback(self) -> None:
        ...
