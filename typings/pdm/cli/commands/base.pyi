"""
This type stub file was generated by pyright.
"""

import argparse
from argparse import _SubParsersAction
from typing import Any, Sequence, TypeVar
from pdm.cli.options import Option
from pdm.project import Project

C = TypeVar("C", bound="BaseCommand")
class BaseCommand:
    """A CLI subcommand"""
    name: str | None = ...
    description: str | None = ...
    arguments: Sequence[Option] = ...
    def __init__(self, parser: argparse.ArgumentParser | None = ...) -> None:
        """For compatibility, the parser is optional and won't be used."""
        ...

    @classmethod
    def init_parser(cls: type[C], parser: argparse.ArgumentParser) -> C:
        ...

    @classmethod
    def register_to(cls, subparsers: _SubParsersAction, name: str | None = ..., **kwargs: Any) -> None:
        """Register a subcommand to the subparsers,
        with an optional name of the subcommand.
        """
        ...

    def add_arguments(self, parser: argparse.ArgumentParser) -> None:
        """Manipulate the argument parser to add more arguments"""
        ...

    def handle(self, project: Project, options: argparse.Namespace) -> None:
        """The command handler function.

        :param project: the pdm project instance
        :param options: the parsed Namespace object
        """
        ...
